--Завдання 3. Розрахунок конверсій в розрізі дат та каналів трафіку
WITH user_session_id_info AS (
    SELECT 
    TIMESTAMP_MICROS(event_timestamp) AS event_timestamp
    , event_name
    , user_pseudo_id ||
      (SELECT value.int_value FROM ev.event_params WHERE key = 'ga_session_id') AS user_session_id 
    , traffic_source.source AS source
    , traffic_source.medium AS medium
    , traffic_source.name AS campaign
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_*` ev
  WHERE 
    event_name IN ('session_start', 'add_to_cart','begin_checkout','purchase')
),
conversion_metrics AS (   -- getting metrics grouped by date and traffic channel for further conversion calculation
  SELECT 
    DATE(event_timestamp) AS event_date
    , source
    , medium
    , campaign
    , COUNT(DISTINCT CASE WHEN event_name = 'session_start' THEN user_session_id END)   AS user_sessions_count
    , COUNT(DISTINCT CASE WHEN event_name = 'add_to_cart' THEN user_session_id END)     AS add_to_cart_count
    , COUNT(DISTINCT CASE WHEN event_name = 'begin_checkout' THEN user_session_id END)  AS begin_checkout_count
    , COUNT(DISTINCT CASE WHEN event_name = 'purchase' THEN user_session_id END)        AS purchase_count
  FROM user_session_id_info
  GROUP BY 1,2,3,4
)
SELECT 
  event_date                                                    -- Date of session start
  , source                                                      -- Traffic source (google, facebook)
  , medium                                                      -- Traffic medium (cpc, organic, referral, etc.)  
  , campaign                                                    
  , user_sessions_count                                         -- Total unique sessions for this date/channel
  , ROUND(safe_divide(add_to_cart_count, user_sessions_count), 2)     AS visit_to_cart          -- % who add items to cart + safe_divide to avoid division by 0
  , ROUND(safe_divide(begin_checkout_count, user_sessions_count), 2)  AS visit_to_checkout      -- % who start checkout process  
  , ROUND(safe_divide(purchase_count, user_sessions_count), 2)        AS visit_to_purchase      -- % who complete purchase
FROM conversion_metrics
ORDER BY event_date DESC, user_sessions_count DESC
;
